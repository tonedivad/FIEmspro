% wll-15-03-2007:
% dle-18-09-2007:
%
\name{feat.rank.re}
\alias{feat.rank.re}
\alias{print.feat.rank.re}
\alias{feat.rank.re.formula}
\alias{feat.rank.re.default}
\alias{feat.rank.re.dlist}

\title{
Wrapper for Resampling Based Feature Ranking
}

% ----------------------------------------------------------------------------
\description{
Wrapper for performing feature ranking method on multiple subsets of the original
 data. At each iteration, only the training samples defined in \code{tr.idx}
 (or optionally \code{pars} only) are used to rank the variables. 
Features rank, order and saliency indicators calculated on the whole data are 
also given in the output. As for \code{\link{accest}} this function allows the use of multiple processors 
as long as the cluster has been set up with the \pkg{snow} package. Data input can be 
in the form of \code{data} matrix + \code{class} vector, following the classic formula type or
derived from \code{\link{dat.sel1}}.
}

% ----------------------------------------------------------------------------
\usage{
  feat.rank.re(\dots)
  
  \method{feat.rank.re}{default}(x,y,method,pars = valipars(),tr.idx=NULL,clmpi=NULL, seed=NULL, \dots)
  
  \method{feat.rank.re}{formula}(formula, data = NULL, \dots)

 \method{feat.rank.re}{dlist}(dlist,  method, pars = NULL, tr.idx = NULL, \dots)
}

% ----------------------------------------------------------------------------
\arguments{
  \item{formula}{
    A formula of the form \code{groups ~ x1 + x2 + \dots}  That is, the
    response is the grouping factor and the right hand side specifies
    the (non-factor) discriminators.
  }
  \item{x}{
    A matrix or data frame containing the explanatory variables.
  }
  \item{dlist}{
    A matrix or data frame containing the explanatory variables if no formula is
    given as the principal argument.
  }
  \item{data}{
    Data frame from which variables specified in \code{formula} are
    preferentially to be taken.
  }
  \item{y}{
    A factor specifying the class for each observation.
  }
  \item{method}{
    Feature ranking method to be used. 
      See \code{\link{fs.techniques}} for details.
  }             
  \item{pars}{
    A list of resampling scheme or validation method such as \emph{Leave-one-out cross-validation}, 
    \emph{Cross-validation}, \emph{Bootstrap} and \emph{Randomised validation (holdout)}.
  	See \code{\link{valipars}} for details.
  }
  \item{tr.idx}{
  User defined index of training samples of type \code{trainind}.
    Generated by \code{trainind} if \code{tr.idx=NULL}.
  }
  \item{clmpi}{
  snow cluster information
  }
  \item{seed}{
  Seed.
  }
  \item{\dots}{Additional parameters to be passed to \code{method}.
      See \code{\link{fs.techniques}} for details.}
}

\details{
 The structure of the \code{feat.rank.re} object is as follows:
  \describe{
  \item{method}{Feature ranking method used.}
  \item{fs.rank}{A vector of final feature ranking scores.}
  \item{fs.order}{A vector of final feature order from best to worst.}
  \item{fs.stats}{A vector of means of statistics or measurements in all computation.}
  \item{rank.list}{Feature rank list of all computation.}
  \item{order.list}{Feature order list of all computation.}
  \item{pars}{Resampling parameters.}
  \item{tr.idx}{Index of training samples.}
  \item{pars.min}{Condensed form of the resampling strategy for output purposes.}
  \item{cl.task}{Condensed form of the classification task.}
  \item{all}{Feature ranking object originated from the overall dataset.}
  }

}

\value{
  \code{feat.rank.re} object.
}

\author{
  David Enot \email{dle@aber.ac.uk}
}

\seealso{
  \code{\link{valipars}}, \code{\link{ftrank.agg}}, \code{\link{fs.techniques}}
}

% ----------------------------------------------------------------------------
\examples{
## load abr1
data(abr1)
y   <- factor(abr1$fact$class)
x <- preproc(abr1$pos , y=y, method=c("log10","TICnorm"),add=1)[,110:500]  
## Select classes 1 and 2
pars   <- valipars(sampling="boot",niter=2,nreps=5)
dat <- dat.sel1(x, y, pwise=c("1","2"),mclass=NULL,pars=pars)

## multiple rankings using AUC
z      <- feat.rank.re(dat[[1]],method="fs.auc")

## print content of z
names(z)
               
}

\keyword{classif}
